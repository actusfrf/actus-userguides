"use strict";(self.webpackChunkactus_documentation=self.webpackChunkactus_documentation||[]).push([[122],{8595:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var s=o(4848),t=o(8453);const i={sidebar_position:2},r="ACTUS Rshiny Demo Guide",a={id:"dadfir3-demo/ACTUS Rshiny Demo Guide",title:"ACTUS Rshiny Demo Guide",description:"This guide will help you install and use the ACTUS Rshiny Demo. This demo is a reactive Rshiny application that allows you to run ACTUS cash flow simulations on a single contract or on a portfolio of contracts using a selected interest rate risk scenario. When simulating a portfolio, you can select whether the results should be summarized as a plot of generated profits or liquidity balance and whether this should be a month-by-month or an accumulated plot.",source:"@site/docs/dadfir3-demo/ACTUS Rshiny Demo Guide.md",sourceDirName:"dadfir3-demo",slug:"/dadfir3-demo/ACTUS Rshiny Demo Guide",permalink:"/docs/dadfir3-demo/ACTUS Rshiny Demo Guide",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dadfir3-demo/ACTUS Rshiny Demo Guide.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Data-Driven Financial Risk and Regulatory Reporting (DaDFiR3)",permalink:"/docs/dadfir3-demo/About"},next:{title:"Guide to ACTUS Portfolio Interest Rate Risk Analysis",permalink:"/docs/dadfir3-demo/Demo User Guide"}},l={},d=[{value:"Alternate Implementations of the Demo",id:"alternate-implementations-of-the-demo",level:2},{value:"Installing the Docker Demo Version",id:"installing-the-docker-demo-version",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"actus-rshiny-demo-guide",children:"ACTUS Rshiny Demo Guide"}),"\n",(0,s.jsx)(n.p,{children:"This guide will help you install and use the ACTUS Rshiny Demo. This demo is a reactive Rshiny application that allows you to run ACTUS cash flow simulations on a single contract or on a portfolio of contracts using a selected interest rate risk scenario. When simulating a portfolio, you can select whether the results should be summarized as a plot of generated profits or liquidity balance and whether this should be a month-by-month or an accumulated plot."}),"\n",(0,s.jsx)(n.p,{children:"The demo also allows you to upload a CSV/spreadsheet file of ACTUS contracts from your workstation and have the analysis applied to that rather than to the provided example contracts and portfolios."}),"\n",(0,s.jsx)(n.p,{children:"The demo is currently limited to working with ANN and PAM contract types, although the underlying ACTUS server generating cashflows supports the simulation of all ACTUS contract types."}),"\n",(0,s.jsx)(n.h2,{id:"alternate-implementations-of-the-demo",children:"Alternate Implementations of the Demo"}),"\n",(0,s.jsxs)(n.p,{children:["The cloud-based version of the demo can be accessed by pointing a browser at: ",(0,s.jsx)(n.a,{href:"https://dadfir3.shinyapps.io/DaDFiR3demo/",children:"ACTUS Rshiny Demo"}),". This will put you immediately into the reactive demo. (Sometimes you have to click on a 'reload' button and wait for a moment to get the cloud application activated.)"]}),"\n",(0,s.jsxs)(n.p,{children:["This version of the demo uses the public ACTUS server at ",(0,s.jsx)(n.a,{href:"https://demo.actusfrf.org:8080",children:"https://demo.actusfrf.org:8080"})," to run the simulations. This server is running ",(0,s.jsx)(n.code,{children:"actus-webapp V1.0"})," and therefore supports interest rate and market risk factors but no other risk modeling - as introduced in ",(0,s.jsx)(n.code,{children:"actus-webapp V1.1"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["An alternate implementation allows you to run the entire demonstration standalone on your workstation as a collection of three linked docker containers. In this version, the ACTUS server is ",(0,s.jsx)(n.code,{children:"actus-webapp V1.1"})," with a more complete Risk Factor API, and persistent risk scenario data is stored in a Mongo database. There are separate docker containers for:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The Rshiny demo application - written in R language using the Rshiny package."}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"actus-webapp V1.1"})," server - written in Java and built using Maven."]}),"\n",(0,s.jsx)(n.li,{children:"A MongoDB community edition NoSQL database used to store risk scenario data."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The function provided in these two demo implementations is almost identical. The main difference is that the standalone dockerized demo can be configured to run:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["EITHER with the remote public ACTUS server at ",(0,s.jsx)(n.code,{children:"https://demo.actusfrf.org:8080"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["OR with the local dockerized ACTUS server on your workstation - reached at ",(0,s.jsx)(n.code,{children:"http://host.docker.internal:8083"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installing-the-docker-demo-version",children:"Installing the Docker Demo Version"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Prerequisite: Install Docker Desktop"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"This software enables you to run and manage docker containers and docker images on your workstation."}),"\n",(0,s.jsx)(n.li,{children:"It is free software and available on macOS, MS Windows, and Linux workstations."}),"\n",(0,s.jsxs)(n.li,{children:["Get started with Docker at ",(0,s.jsx)(n.a,{href:"https://docs.docker.com/get-started/hands-on-overview/",children:"Docker Documentation"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"The 'Get Docker' section in this guide has download and install instructions."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Pull a Docker Container Image for the MongoDB Database"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Pull the image from the public Docker Hub repository:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker pull mongodb/mongodb-community-server:6.0-ubi8\n"})}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"The demo is tested with this version but is likely to work with other versions."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Start a Docker Container for MongoDB"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Start a container using this image and exporting the MongoDB database service on port localhost:27018:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run --name mongo-server -d -p 27018:27017 mongodb/mongodb-community-server:6.0-ubi8\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["The running container will be named ",(0,s.jsx)(n.code,{children:"mongo-server"}),". The standard port for a MongoDB service is 27017. Exporting the MongoDB service as port 27018 reduces the risk of conflict with a (non-docker) MongoDB service on your workstation."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Pull an ACTUS Server Image"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Pull the image from the public Docker Hub repository:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker pull fnparr/actus-server:no_mongo\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["This version of the ACTUS server uses ",(0,s.jsx)(n.code,{children:"actus-webapp V1.1"})," and ",(0,s.jsx)(n.code,{children:"actus-core"}),", with all persistence provided by a separate MongoDB container."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Start a Container for the ACTUS Server"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Start a container using this ACTUS server image:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run --name actus-server-nomongo -d -p 8083:8083 fnparr/actus-server:no_mongo\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["The new container is called ",(0,s.jsx)(n.code,{children:"actus-server-nomongo"})," and will listen on port 8083 for ACTUS requests."]}),"\n",(0,s.jsxs)(n.li,{children:["Internally, the ",(0,s.jsx)(n.code,{children:"actus-webapp"})," software is configured to request MongoDB services using ",(0,s.jsx)(n.code,{children:"host.docker.internal:27018"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Pull the ACTUS Rshiny Demo Image"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Pull the image from the public Docker Hub repository:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker pull fnparr/actus-rshiny-demo:b02\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Start a Container for the ACTUS Rshiny Demo"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Start a container using this image:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run --name using-actus-demo -d -p 3500:3838 fnparr/actus-rshiny-demo:b02\n"})}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Port 3838 is the default request port for Docker containers; we export this to localhost:3500 for the demo service."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Access the Demo"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Point a browser at ",(0,s.jsx)(n.code,{children:"http://localhost:3500"}),". The Demo screen should appear."]}),"\n",(0,s.jsxs)(n.li,{children:["In its default configuration, the demo is actually using the remote public ACTUS service at ",(0,s.jsx)(n.code,{children:"https://demo.actusfrf.org:8080"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configure for Local Standalone Operation"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Click on the ",(0,s.jsx)(n.strong,{children:"help"})," tab in the title bar of the demo."]}),"\n",(0,s.jsxs)(n.li,{children:["Set the server to be: ",(0,s.jsx)(n.code,{children:"http://host.docker.internal:8083"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"This connects the demo to use the ACTUS server container running on your desktop, which in turn uses the MongoDB container."}),"\n",(0,s.jsx)(n.li,{children:"After this, when you switch back to the Contract or Portfolio tabs, the ACTUS simulations and plots are all being handled standalone."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["In the local standalone configuration, the ACTUS server is ",(0,s.jsx)(n.code,{children:"actus-webapp V1.1"})," with support for the ACTUS Risk Factor API, and it is connected to a MongoDB container in which scenario data can be stored persistently. However, the current ACTUS-Rshiny-demo has no support for defining and using new risk scenarios. That capability of the ACTUS server container can be triggered and tested by making direct ",(0,s.jsx)(n.code,{children:"curl"})," requests to ",(0,s.jsx)(n.code,{children:"http://localhost:8083"})," and analyzing the returned data. The ACTUS RFI User Guide in this Git repository provides more detailed information on how to do this."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>a});var s=o(6540);const t={},i=s.createContext(t);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);